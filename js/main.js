// Global Variables
var annotations; // Store Annotations; this is the text with tags
var tags; // Store Tag Details ex. Verb, Noun, Determiner....
var conceptlist; // This is filled by getConcepts functions, they are related to your search word
var addedWords; // Custom words you can add to your search
var removedWords; // Your search term + the sentence you do not want to include, for this example please ignore it
var cnResults; // ConceptNet results that is part of the conceptlist
var wnResults; // WordNet results that is part of the conceptlist
// Storage
var patternParameters; // JSON to send to the getPattern
var suggestionParameters; //JSON to send to getSuggestions
// Importing the sample JSON which is basically the annotated corpus; the annotated corpus can be generated by our additional functions
$.getJSON("sample_corpus.json", function(json) {    
    addedWords = json.addedWords;
    removedWords = json.removedWords;
    tags = json.tags;        
    annotations = json.annotations;    
});
// Start of the Functions needed for getting the concordances
// submit search will send the search term together with the corpus you will be searching the word from.
function submitSearch() {
    searchWord = $('#search').val();
    searchPos = $('#search-pos').val();    
    var search = {
        'concept': searchWord,
        'pos': searchPos
    };    
    search = JSON.stringify(search);
    formData = {
        'feature': search
    };    
    getConcepts(formData);
}
function submitPatterns(){
    getPatterns(patternParameters);
}
function submitSuggestions(){
    console.log(suggestionParameters);
    getSuggestions(suggestionParameters);
}
// this is where the search term and corpus will be sent to get related words.
function getConcepts(formData){
        $.ajax({
            type: 'POST',
            url: 'http://localhost:8080/getConcepts',
            data: formData,
            success: function (msg) {
                try {
                    conceptlist = msg;
                    var result = JSON.parse(msg);
                    cnResults = result.FORM_OF;
                    wnResults = result.WORDNET;                    
                    result = JSON.stringify(result);
                    var feature = {
                        'conceptlist': conceptlist,
                        'tags': tags,
                        'annotations': annotations,
                        'addedwords': addedWords,
                        'removedwords': removedWords
                    }                

                    var data = {
                        'feature': JSON.stringify(feature)
                    };                       
                    getConcordances(data);                
                } catch (e) {
                    console.log(e);                    
                    swal('Error getting results. Please try again.');
                }

            },
            fail: function (msg) {
                swal('Could not Find Concepts Please Try again.');
            }
        });

}
// This is where your list of related words + corpus will be sent to get back your results
function getConcordances(formData){        
    $.ajax({
        type: 'POST',
        url: 'http://localhost:8080/getConcordances',
        data: formData,
        success: function(msg){      
            searchResult = JSON.parse(msg);      
            swal(msg);
            console.log(searchResult);
            var data = {
                'concordance': JSON.stringify(searchResult),
                'tags': JSON.stringify(tags),
                'annotations': JSON.stringify(annotations)
            };
            patternParameters = data;
        },
        fail: function (msg){
            swal('Could not Get Concordances Please Try again.');
        }
    })
}
// End of the Functions for getting concordances

// Start of Patterns Functions
function getPatterns(formData){
    $.ajax({
        type: 'POST',
        url: 'http://localhost:8080/getPattern',
        data: formData,
        success: function (msg) {
            patterns = JSON.parse(msg);
            var feature = {
                'conceptlist': conceptlist,
                'tags': tags,
                'annotations': annotations,
                'patterns': patterns
            }

            var data = {
                'jsonContent': JSON.stringify(feature)
            };                             
            suggestionParameters = data;
            swal(patterns);
            console.log(patterns);
        },
        fail: function (msg) {
            swal('Could not Find Patterns Please Try again.');
        }
    });
}
function getPatternFilteredByID(formData){

}
// End of Patterns Functions
// Start of Suggestions
function getSuggestions(formData){
    $.ajax({
        type: 'POST',
        url: 'http://localhost:8080/getSuggestions',
        data: formData,
        success: function (msg) {        
            suggestions = JSON.parse(msg);
            swal(suggestions);
            console.log(suggestions);
        },
        fail: function (msg) {
            swal('Could not Find Suggestions Please Try again.');
        }
    });
}
// End of Suggestions 